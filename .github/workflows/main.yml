name: Deploy Evaluation Worker to On-Prem K8s on Development Branch Push

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    name: Build & Deploy to On-Prem Kubernetes
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Decode kubeconfig
        run: |
          echo "$KUBECONFIG_B64" | base64 --decode > kubeconfig.yaml
        env:
          KUBECONFIG_B64: ${{ secrets.KUBECONFIG_B64 }}

      - name: Check cluster connection
        run: |
          export KUBECONFIG=$PWD/kubeconfig.yaml
          echo "‚úÖ Current context:"
          kubectl config current-context

          echo "‚úÖ Nodes in the cluster:"
          kubectl get nodes

      - name: Delete existing pod
        run: |
          export KUBECONFIG=$PWD/kubeconfig.yaml
          echo "üßπ Deleting existing pod (if any)..."
          POD=$(kubectl get pods -n internal-aimx -l app=evaluation-worker -o jsonpath="{.items[0].metadata.name}")
          kubectl delete pod $POD -n internal-aimx || echo "Pod not found or already deleted"

      - name: Apply Kubernetes manifests
        run: |
          export KUBECONFIG=$PWD/kubeconfig.yaml
          echo "üì¶ Applying manifests..."
          kubectl apply -f temporal/k8s/evaluation-worker-deployment.yaml

      - name: Wait for deployment rollout
        run: |
          export KUBECONFIG=$PWD/kubeconfig.yaml
          echo "‚è≥ Waiting for deployment to finish..."
          kubectl rollout status deployment/evaluation-worker -n internal-aimx

      - name: Show current pods
        run: |
          export KUBECONFIG=$PWD/kubeconfig.yaml
          kubectl get pods -n internal-aimx -o wide

      - name: Show logs (optional)
        run: |
          export KUBECONFIG=$PWD/kubeconfig.yaml
          POD=$(kubectl get pods -n internal-aimx -l app=evaluation-worker -o jsonpath="{.items[0].metadata.name}")
          kubectl logs $POD -n internal-aimx









# name: Deploy Evaluation Worker to On-Prem K8s on Development Branch Push

# on:
#   push:
#     branches:
#       - main  # same as EC2 one
#   workflow_dispatch:

# jobs:
#   deploy:
#     name: Build & Deploy to On-Prem Kubernetes
#     runs-on: self-hosted

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Decode kubeconfig
#         run: |
#           echo "$KUBECONFIG_B64" | base64 --decode > kubeconfig.yaml
#         env:
#           KUBECONFIG_B64: ${{ secrets.KUBECONFIG_B64 }}

#       - name: Check cluster connection
#         run: |
#           export KUBECONFIG=$PWD/kubeconfig.yaml
#           echo "‚úÖ Current context:"
#           kubectl config current-context

#           echo "‚úÖ Nodes in the cluster:"
#           kubectl get nodes

#       - name: Apply Kubernetes manifests
#         run: |
#           export KUBECONFIG=$PWD/kubeconfig.yaml
#           echo "üì¶ Applying manifests..."
#           kubectl apply -f temporal/k8s/evaluation-worker-deployment.yaml  # üîÅ Replace with correct path

#       - name: Wait for deployment rollout
#         run: |
#           export KUBECONFIG=$PWD/kubeconfig.yaml
#           echo "‚è≥ Waiting for deployment to finish..."
#           kubectl rollout status deployment/evaluation-worker -n internal-aimx

#       - name: Show current pods
#         run: |
#           export KUBECONFIG=$PWD/kubeconfig.yaml
#           kubectl get pods -n internal-aimx -o wide

#       - name: Show logs (optional)
#         run: |
#           export KUBECONFIG=$PWD/kubeconfig.yaml
#           POD=$(kubectl get pods -n internal-aimx -l app=evaluation-worker -o jsonpath="{.items[0].metadata.name}")
#           kubectl logs $POD -n internal-aimx

